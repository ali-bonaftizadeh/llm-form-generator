name: PR - Validate and Build

permissions: read-all

on:
  pull_request:
    branches: [ develop ]
    types: [ opened, reopened, synchronize, labeled ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Check dependabot build
        uses: ./.github/actions/check-ext-build
      - name: pre-commit
        uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@v8.23.0
        with:
          skip_checkout: true
      - name: Ensure SHA pinned actions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@v3.0.25

  build:
    runs-on: ubuntu-latest
    needs: pre-checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - uses: actions/cache@v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Setup Java JDK 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: 21
          distribution: temurin

      - name: Set preview version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: |
          GITHUB_PR_NUMBER=PR-${{ github.event.pull_request.number }}
          echo 0.0.1-${GITHUB_PR_NUMBER}-${GITHUB_RUN_NUMBER}-SNAPSHOT > VERSION

      - name: Set VERSION env variable
        if: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update pom files to the new version
        if: ${{ contains(github.head_ref, 'preview') || contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: mvn -B versions:set -DnewVersion=$VERSION -DprocessAllModules=true -DgenerateBackupPoms=false

      - name: Define Maven Command
        id: define_maven_command
        shell: bash
        run: |
          if [ $DO_PUSH == 'true' ]; then
            echo "command=deploy" >> $GITHUB_OUTPUT
          else
            echo "command=verify" >> $GITHUB_OUTPUT
          fi
        env:
          DO_PUSH: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}

      - name: Build and Test with Maven (and maybe Deploy)
        shell: bash
        run: mvn ${{ steps.define_maven_command.outputs.command }} -P integration-test ${{ env.MAVEN_CLI_OPTS }}
        env:
          MAVEN_CLI_OPTS: --show-version --no-transfer-progress --settings settings.xml
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set JaCoCo report path
        shell: bash
        run: |
          REPORTS=$(find . -type f -path "*/target/jacoco-aggregate/jacoco.xml" | paste -sd "," -)
          echo "JACOCO_REPORT_PATH=$REPORTS" >> $GITHUB_ENV
          echo "$REPORTS" > jacoco_paths.txt

      - name: Set SONAR_SCANNER_OPTS
        shell: bash
        run: |
          PATHS=$(cat jacoco_paths.txt)
          echo "SONAR_SCANNER_OPTS=sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=activiti -Dsonar.projectKey=Activiti_Activiti -Dsonar.coverage.jacoco.xmlReportPaths=$PATHS" >> $GITHUB_ENV

      - name: Debug Report Paths and Sonar Options
        shell: bash
        run: |
          echo "Final Jacoco Paths: $JACOCO_REPORT_PATH"
          echo "Final Sonar Options: $SONAR_SCANNER_OPTS"
        env:
          JACOCO_REPORT_PATH: ${{ env.JACOCO_REPORT_PATH }}
          SONAR_SCANNER_OPTS: ${{ env.SONAR_SCANNER_OPTS }}

      - name: SonarCloud Scan
        shell: bash
        run: mvn ${{ env.SONAR_SCANNER_OPTS }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Echo Longest Test Run
        uses: ./.github/actions/echo-longest-run
