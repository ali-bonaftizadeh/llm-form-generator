name: PR - Validate and Build

permissions: read-all

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - reopened
      - synchronize
      - labeled
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:

  pre-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: pre-commit
        uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@f37c44cc085236178ebb8834eb634b0b4b550a40 # v8.23.0
        with:
          skip_checkout: true
      - name: Ensure SHA pinned actions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@fc87bb5b5a97953d987372e74478de634726b3e5 # v3.0.25

  build:
    runs-on: ubuntu-latest
    needs: pre-checks
    steps:

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Java JDK 21
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # 4.7.1
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Set preview version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: |
          GITHUB_PR_NUMBER=PR-${{ github.event.pull_request.number }}
          echo 0.0.1-${GITHUB_PR_NUMBER}-${GITHUB_RUN_NUMBER}-SNAPSHOT > VERSION

      - name: Set VERSION env variable
        if: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: |
          VERSION=$(cat VERSION)
          echo set VERSION=$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update pom files to the new version
        if: ${{ contains(github.head_ref, 'preview') || contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: mvn -B versions:set -DnewVersion=$VERSION -DprocessAllModules=true -DgenerateBackupPoms=false

      - name: Define Maven Command
        id: define_maven_command
        shell: bash
        run: |
          if [ $DO_PUSH == 'true' ]
          then
            echo "command=deploy" >> $GITHUB_OUTPUT
          else
            echo "command=verify" >> $GITHUB_OUTPUT
          fi
        env:
          DO_PUSH: ${{ contains(github.event.pull_request.labels.*.name, 'preview') }}

      - name: Build and Test with Maven (and maybe Deploy)
        shell: bash
        run: |
          mvn ${{ steps.define_maven_command.outputs.command }} -P integration-test ${{ env.MAVEN_CLI_OPTS }}
        env:
          MAVEN_CLI_OPTS: --show-version --no-transfer-progress --settings settings.xml
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set SONAR_SCANNER_OPTS
        id: set_sonar_opts
        shell: bash
        run: |
          REPORT_PATH="target/jacoco-merged/jacoco.xml"
          if [ ! -f "$REPORT_PATH" ] || ! grep -q "<counter" "$REPORT_PATH"; then
            echo "ERROR: Coverage report missing or empty at $REPORT_PATH"
            exit 1
          fi

          echo "Using JaCoCo report at $REPORT_PATH"
          echo "SONAR_SCANNER_OPTS=sonar:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=activiti \
            -Dsonar.projectKey=Activiti_Activiti \
            -Dsonar.coverage.jacoco.xmlReportPaths=$REPORT_PATH" >> $GITHUB_ENV
          echo "report_path=$REPORT_PATH" >> $GITHUB_OUTPUT

      - name: Check JaCoCo Report Size & Content
        shell: bash
        run: |
          REPORT_PATH="target/jacoco-merged/jacoco.xml"
          echo "== Report Size =="
          ls -lh $REPORT_PATH || echo "Not found"
          echo "== First 10 lines =="
          head -n 10 $REPORT_PATH || echo "Not readable"
          echo "== <counter> tags found =="
          grep -c "<counter" $REPORT_PATH || echo "No counters found"


      - name: Confirm coverage files
        shell: bash
        run: |
          echo "== Merged .exec file =="
          ls -lh target/jacoco-merged/jacoco-merged.exec || echo "Not found"

          echo "== Final JaCoCo XML report =="
          ls -lh target/jacoco-merged/jacoco.xml || echo "Not found"
          grep -c "<counter" target/jacoco-merged/jacoco.xml || echo "No <counter> tags found"


      - name: SonarCloud Scan
        run: mvn ${{ env.SONAR_SCANNER_OPTS }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Echo Longest Test Run
        uses: ./.github/actions/echo-longest-run
